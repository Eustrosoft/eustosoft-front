{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript"],
      "rules": {
        "quotes": ["error", "single"],
        "semi": ["warn", "always"],
        "no-console": [
          "warn",
          {
            "allow": ["warn", "error"]
          }
        ],
        "no-multiple-empty-lines": [
          "warn",
          {
            "max": 2
          }
        ],
        "no-trailing-spaces": "error",
        "no-irregular-whitespace": "warn",
        "eqeqeq": "error",
        "no-empty": "error",
        "max-len": [
          "warn",
          {
            "code": 165
          }
        ],
        "no-var": "error",
        "arrow-parens": "error",
        "no-extra-semi": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-else-return": "warn",
        "no-debugger": "error",
        "no-multi-spaces": "error",
        "prefer-template": "error",
        "object-curly-spacing": ["error", "always"],
        "prefer-const": "error",
        "no-extra-parens": ["error", "functions"],
        "comma-spacing": "error",
        "no-extra-boolean-cast": "error",
        "no-useless-return": "warn",
        "no-useless-escape": "error",
        "no-useless-concat": "error",
        "no-multi-assign": "error",
        "no-new-object": "error",
        "no-extra-label": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array"
          }
        ],
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/strict-boolean-expressions": "warn",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "caughtErrors": "none",
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "destructuredArrayIgnorePattern": "^_"
          }
        ],
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/no-empty-lifecycle-method": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/prefer-on-push-component-change-detection": "warn",
        "@angular-eslint/no-input-rename": "warn",
        "@angular-eslint/no-output-rename": "warn",
        "@angular-eslint/no-output-native": "warn",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@angular-eslint/no-host-metadata-property": "warn",
        "@angular-eslint/no-conflicting-lifecycle": "warn"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    },
    {
      "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
      "env": {
        "jest": true
      },
      "rules": {}
    }
  ]
}
